<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:aeRelationalModel xmlns:ns2="http://www.key-project.org/abstractexecution" preCondition="" postCondition="\result_1[0] == \result_2[0] &amp;&amp; &#10;(&#10;\result_1[1] instanceof java.lang.NullPointerException &amp;&amp; \result_2[1] instanceof java.lang.NullPointerException&#10;) ||&#10;\result_1[1] == \result_1[1]">
    <programOne>/*@ ae_constraint
  @ \disjoint(x, frN);
  @*/

/*@ assignable \hasTo(x);
  @ accessible x;
  @ normal_behaviour ensures x instanceof X;
  @ return_behavior requires false;
  @ exceptional_behavior requires false;
  @*/
\abstract_statement Q;

((X)x).n();
((X)x).n();
return x;
</programOne>
    <programTwo>/*@ ae_constraint
  @ \disjoint(x, frN);
  @*/

/*@ assignable \hasTo(x);
  @ accessible x;
  @ normal_behaviour ensures x instanceof X;
  @ return_behavior requires false;
  @ exceptional_behavior requires false;
  @*/
\abstract_statement Q;
  
X temp = (X)x;
temp.n();
temp.n();
return temp;
</programTwo>
    <methodLevelContext>public class X {

    public void n() {
        
        /*@ assignable frN;
          @ accessible fpN;
          @*/
        \abstract_statement N;
    }
    
}
</methodLevelContext>
    <locationSets>
        <locationSet funcName="frN">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
        <locationSet funcName="fpN">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
    </locationSets>
    <functions/>
    <predicates/>
    <programVariables>
        <programVariable typeName="java.lang.Object" varName="x">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        </programVariable>
    </programVariables>
</ns2:aeRelationalModel>
