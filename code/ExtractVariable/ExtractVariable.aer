<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:aeRelationalModel xmlns:ns2="http://www.key-project.org/abstractexecution" preCondition="" postCondition="\result_1 == \result_2">
    <programOne>// 1. In the original presentation we have 
// void m() { x = new X(); } in other words
// m() may change the reference the value x holds


/*@ ae_constraint
  @ \disjoint(x, frM) &amp;&amp; 
  @ \disjoint(x, frP);
  @*/

/*@ assignable \hasTo(x);
  @ accessible x;
  @ normal_behaviour ensures x instanceof X;
  @ return_behavior requires false;
  @ exceptional_behavior requires false;
  @*/
\abstract_statement Q;

((X)x).n();
m();
return x;
</programOne>
    <programTwo>// 2. Thus the extract local refactoring here
// can introduce a semantic change as now
// in the second temp.n() we are calling n()
// on a new object instead of on the one 
// referred to by x originally.

/*@ ae_constraint
  @ \disjoint(x, frM) &amp;&amp;
  @ \disjoint(x, frP);
  @*/

/*@ assignable \hasTo(x);
  @ accessible x;
  @ normal_behaviour ensures x instanceof X;
  @ return_behavior requires false;
  @ exceptional_behavior requires false;
  @*/
\abstract_statement Q;
  
X temp = (X)x;
temp.n();
m();
return temp;
</programTwo>
    <methodLevelContext>public void m() {       
       /*@ assignable frM;
         @ accessible fpM;
         @ return_behavior requires false;
         @ exceptional_behavior requires false;
         @ 
         @*/
       \abstract_statement M;
}

public class X {

    public void n() {
        
        /*@ assignable frP;
          @ accessible fpP;
          @ return_behavior requires false;
          @ exceptional_behavior requires false;
          @*/
        \abstract_statement P;
    }
    
}
</methodLevelContext>
    <locationSets>
        <locationSet funcName="frM">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
        <locationSet funcName="fpM">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
        <locationSet funcName="frP">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
        <locationSet funcName="fpP">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
    </locationSets>
    <functions/>
    <predicates/>
    <programVariables>
        <programVariable typeName="java.lang.Object" varName="x">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        </programVariable>
    </programVariables>
</ns2:aeRelationalModel>
