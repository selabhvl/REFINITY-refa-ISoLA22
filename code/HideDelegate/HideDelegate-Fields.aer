<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:aeRelationalModel xmlns:ns2="http://www.key-project.org/abstractexecution" preCondition="" postCondition="\result_1[0]==\result_2[0]">
    <programOne>/*@ ae_constraint
  @   \disjoint(temp, fpF) &amp;&amp; 
  @   \disjoint(temp, frG) &amp;&amp;
  @   \disjoint(temp, fpG) &amp;&amp;
  @   \disjoint(temp, frF);
  @*/

if(in instanceof Resource &amp;&amp; temp instanceof Container) {
  ((Container)temp).owner = ((Resource)in).getOwner();
  ((Container)temp).resource = ((Container) temp).owner.getResource();
  return temp;
}
</programOne>
    <programTwo>/*@ ae_constraint
  @   \disjoint(temp, fpF) &amp;&amp; 
  @   \disjoint(temp, frG) &amp;&amp;
  @   \disjoint(temp, fpG) &amp;&amp;
  @   \disjoint(temp, frF);
  @*/
        
if(in instanceof Resource &amp;&amp; temp instanceof Container) {
  return ((Resource)in).hiddenDelegate((Container)temp);
}

</programTwo>
    <methodLevelContext>class Container {
    Owner owner;
    Resource resource;
}

public class Resource {
    private Owner owner;   
    public Owner getOwner() {


        /*@ 
          @ assignable owner, frF;
          @ accessible fpF;
          @ return_behavior requires false;
          @ exceptional_behavior requires false;
          @*/
        \abstract_statement F;
        return owner;
        
    }    
  public Container hiddenDelegate(Container temp) {
    
    temp.owner = this.getOwner(); 
    temp.resource = temp.owner.getResource();
    return temp;
  }

}

public class Owner {
    private Resource resource;  
    public Resource getResource() {
        

        /*@ assignable resource, frG;
          @ accessible fpG;
          @ return_behavior requires false;
          @ exceptional_behavior requires false;
          @*/
        \abstract_statement G;
        
        return resource;
    }
}</methodLevelContext>
    <locationSets>
        <locationSet funcName="fpF">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
        <locationSet funcName="fpG">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
        <locationSet funcName="frF">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
        <locationSet funcName="frG">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
            <resultSortName>LocSet</resultSortName>
        </locationSet>
    </locationSets>
    <functions/>
    <predicates/>
    <programVariables>
        <programVariable typeName="java.lang.Object" varName="in">
            <relevantOne>-1</relevantOne>
            <relevantTwo>-1</relevantTwo>
        </programVariable>
        <programVariable typeName="java.lang.Object" varName="temp">
            <relevantOne>0</relevantOne>
            <relevantTwo>0</relevantTwo>
        </programVariable>
    </programVariables>
</ns2:aeRelationalModel>
